rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isSignedIn() {
    	return request.auth != null;
    }

    function getRoles(userId) {
    	return get(/databases/$(database)/documents/users/$(userId)).data.roles;
    }

    function userHasRole(userId, role) {
    	return isSignedIn() && (role in getRoles(userId));
    }

  // match /{document=**} {
   //		allow read, write: if isSignedIn();
 		//}

		match /messages/{message} {
			allow read: if isSignedIn() && userHasRole(request.auth.uid, 'messages.r');
      allow create: if isSignedIn() && userHasRole(request.auth.uid, 'messages.c')
										&& request.resource.data.uid == request.auth.uid
                  	&& request.resource.data.text != null;
                    //&& request.resource.data.username == request.auth.token.name;
    }

		match /users/{user} {
	  	allow read: if isSignedIn();
      allow create: if true;//isSignedIn()
      							//&& user == request.auth.uid
										//&& request.resource.data.name == request.auth.token.name;
			allow list, get: if true;
		}
  }
}
